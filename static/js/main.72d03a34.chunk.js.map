{"version":3,"sources":["additem.jsx","AppDragDropDemo.jsx","index.js"],"names":["Additem","props","className","onSubmit","add","type","onChange","change","value","AppDragDropDemo","state","tasks","id","uuid","name","category","bgcolor","input","onDragOver","e","preventDefault","onDragStart","console","log","dataTransfer","setData","onDrop","ev","cat","getData","filter","task","setState","handlechange","target","handleAdd","trim","randomColor","i","Math","round","random","newitem","this","wip","complete","forEach","t","push","key","draggable","style","backgroundColor","Component","ReactDOM","render","document","getElementById"],"mappings":"0PAEe,SAASA,EAAQC,GAC5B,OACI,6BACI,0BAAMC,UAAU,UAAUC,SAAUF,EAAMG,KAC1C,2BAAOC,KAAK,OAAOC,SAAUL,EAAMM,OAAQC,MAAOP,EAAMO,QACxD,4BAAQH,KAAK,UAAb,c,oPCFSI,E,2MACnBC,MAAQ,CACNC,MAAO,CAAC,CAAEC,GAAGC,MAAOC,KAAM,UAAWC,SAAU,MAAOC,QAAS,QAC/D,CAAEJ,GAAGC,MAAQC,KAAM,YAAaC,SAAU,WAAYC,QAAS,YAC/DC,MAAM,I,EAEVC,WAAW,SAACC,GACZA,EAAEC,kB,EAEFC,YAAY,SAACF,EAAEP,GACbU,QAAQC,IAAI,YAAYX,GACxBO,EAAEK,aAAaC,QAAQ,KAAKb,I,EAE9Bc,OAAS,SAACC,EAAIC,GACV,IAAIhB,EAAKe,EAAGH,aAAaK,QAAQ,MACjCP,QAAQC,IAAIX,GACZ,IAAID,EAAQ,EAAKD,MAAMC,MAAMmB,OAAO,SAACC,GAIxB,OAHFA,EAAKnB,KAAOA,IACXmB,EAAKhB,SAAWa,GAERG,IACN,EAAKC,S,qVAAL,IAAmB,EAAKtB,MAAxB,CAA+BC,Y,EACjDsB,aAAa,SAACd,GACZ,EAAKa,SAAS,CACZf,MAAME,EAAEe,OAAO1B,S,EAGnB2B,UAAU,SAAChB,GAET,GADAA,EAAEC,iBAC2B,KAA1B,EAAKV,MAAMO,MAAMmB,OAAY,CAEhC,IADE,IAAIC,EAAY,IACVC,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAIlBD,GAHe,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC5CE,KAAKC,MAAO,GAAAD,KAAKE,SAAsB,IAIvD,IAAIC,EAAQ,CAAE9B,GAAGC,MAAOC,KAAM,EAAKJ,MAAMO,MAAOF,SAAU,MAAOC,QAAQqB,GACzE,EAAKL,SAAS,CACZrB,MAAM,CAAC+B,GAAF,mBAAa,EAAKhC,MAAMC,QAC7BM,MAAM,O,wEAKE,IAAD,OACPK,QAAQC,IAAIoB,KAAKjC,OACjB,IAAIC,EAAQ,CAAEiC,IAAK,GAAIC,SAAU,IAGjC,OAFAF,KAAKjC,MAAMC,MAAMmC,QAAQ,SAACC,GAAQpC,EAAMoC,EAAEhC,UAAUiC,KAAK,yBAAKC,IAAKF,EAAEnC,GAAIS,YAAa,SAACF,GAAD,OAAO,EAAKE,YAAYF,EAAG4B,EAAEnC,KAAKsC,WAAS,EAAChD,UAAU,YAAYiD,MAAO,CAAEC,gBAAiBL,EAAE/B,UAA3H,mCAAuK+B,EAAEjC,KAAzK,2BAEjD,oCACN,wBAAIZ,UAAU,UAAd,yBACA,kBAACF,EAAD,CAASI,IAAKuC,KAAKR,UAAW5B,OAAQoC,KAAKV,aAAczB,MAAOmC,KAAKjC,MAAMO,QAC7E,yBAAKf,UAAU,kBACf,yBAAKA,UAAU,MAAMgB,WAAY,SAACC,GAAD,OAAO,EAAKD,WAAWC,IAAIO,OAAQ,SAACP,GAAQ,EAAKO,OAAOP,EAAG,SAC3F,0BAAMjB,UAAU,eAAhB,oBACA,yBAAKA,UAAU,QAAf,IAAwBS,EAAMiC,MAE7B,yBAAK1C,UAAU,YACfgB,WAAY,SAACC,GAAD,OAAO,EAAKD,WAAWC,IACnCO,OAAQ,SAACP,GAAD,OAAO,EAAKO,OAAOP,EAAG,cAC9B,0BAAMjB,UAAU,eAAhB,aACA,yBAAKA,UAAU,QAAf,MAA0BS,EAAMkC,SAAhC,Y,GA9DuCQ,aCA7CC,IAASC,OAAO,kBAAC,EAAD,MAAyBC,SAASC,eAAe,U","file":"static/js/main.72d03a34.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Additem(props) {\n    return (\n        <div >\n            <form className=\"additem\" onSubmit={props.add}>\n            <input type=\"text\" onChange={props.change} value={props.value}/>\n            <button type=\"submit\">Add Task</button> \n            </form>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\"\nimport Additem from \"./additem\";\nimport uuid from \"uuid\";\n\nexport default class AppDragDropDemo extends Component {\n  state = {\n    tasks: [{ id:uuid(),name: \"Jogging\", category: \"wip\", bgcolor: \"pink\" },\n    { id:uuid(), name: \"BreakFast\", category: \"complete\", bgcolor: \"skyblue\" }],\n    input:\"\"\n  }\nonDragOver=(e)=>{\ne.preventDefault();\n}\nonDragStart=(e,id)=>{\n  console.log(\"dragstart\",id);\n  e.dataTransfer.setData(\"id\",id);\n}\nonDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    console.log(id)\n    let tasks = this.state.tasks.filter((task) => { \n           if (task.id === id) {\n                task.category = cat;\n                 }\n                 return task;  });          \n                  this.setState({ ...this.state, tasks }); }\nhandlechange=(e)=>{\n  this.setState({\n    input:e.target.value\n  })\n}\nhandleAdd=(e)=>{\n  e.preventDefault();\n  if(this.state.input.trim()!==\"\"){\n    let randomColor=\"#\"\n  for(let i=0;i<6;i++){\n    let ColorArray=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",0,1,2,3,4,5,6,7,8,9]\n    let randomNum=Math.round((Math.random() * (15 - 0) + 0));\n    let random=ColorArray[randomNum];\n    randomColor=randomColor+random;\n  }\n  let newitem={ id:uuid(),name: this.state.input, category: \"wip\", bgcolor:randomColor};\n  this.setState({\n    tasks:[newitem,...this.state.tasks],\n    input:\"\"\n  })\n  }\n  \n}\n  render() {\n    console.log(this.state)\n    var tasks = { wip: [], complete: [] }\n    this.state.tasks.forEach((t) => { tasks[t.category].push(<div key={t.id} onDragStart={(e) => this.onDragStart(e, t.id)} draggable className=\"draggable\" style={{ backgroundColor: t.bgcolor }}>                                {t.name}                    </div>); });\n\n    return (<>\n      <h2 className=\"header\">ADD TO DO DRAG & DROP</h2>\n      <Additem add={this.handleAdd} change={this.handlechange} value={this.state.input} />\n    <div className=\"container-drag\">\n    <div className=\"wip\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => { this.onDrop(e, \"wip\") }}>\n     <span className=\"task-header\">WORK IN PROGRESS</span>\n     <div className=\"item\"> {tasks.wip}</div>\n  </div>\n      <div className=\"droppable\" \n      onDragOver={(e) => this.onDragOver(e)} \n      onDrop={(e) => this.onDrop(e, \"complete\")}>\n      <span className=\"task-header\">COMPLETED</span> \n      <div className=\"item\">   {tasks.complete} </div>\n     </div>\n    </div></>);\n\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppDragDropDemo from './AppDragDropDemo.jsx';\n\nReactDOM.render(<AppDragDropDemo />,     document.getElementById(\"root\"));"],"sourceRoot":""}